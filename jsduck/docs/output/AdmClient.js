Ext.data.JsonP.AdmClient({"singleton":true,"autodetected":{},"meta":{},"subclasses":[],"requires":[],"component":false,"aliases":{},"uses":[],"mixedInto":[],"alternateClassNames":[],"files":[{"href":"App.html#AdmClient","filename":"App.js"}],"tagname":"class","parentMixins":[],"superclasses":[],"members":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/App.html#AdmClient' target='_blank'>App.js</a></div></pre><div class='doc-contents'><p>Main class in the app.\n<p><img src=\"images/app.png\" alt=\"alt app image\" width=\"600\" height=\"485\"></p></p>\n\n<p>This adminstration tool is build on top of ExtJS. It uses a MVC pattern from Sencha. More\ninformation can be found <a href=\"http://docs.sencha.com/extjs/4.2.2/#!/guide/application_architecture\">here</a></p>\n\n<p>To add tools or search items, add a row to the corresponding Array store.</p>\n\n<p>For tools a details part must be added in the controller.</p>\n\n<p>In general No ID's are being used to identify components. Instead the application uses ItemID to avoid\nID collisions.</p>\n</div><div class='members'></div></div>","mixins":[],"name":"AdmClient","id":"class-AdmClient","short_doc":"Main class in the app. ..."});